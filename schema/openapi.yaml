openapi: "3.0.0"
info:
  version: "0.1"
  title: "arXiv Submission API"
  description: "A RESTful API for arXiv submissions."
  contact:
    name: "arXiv API Team"
    email: nextgen@arxiv.org
  license:
    name: MIT

paths:
  /submission/:
    get:
      operationId: getServiceRoot
      description: |
        Describes the state of the submission API, and available methods.
      responses:
        '200':
          description: |
            Information about the submission API, including routes to submit
            and poll.

    post:
      operationId: createSubmission
      summary: |
        Create a new submission, and update with service annotations, metadata,
        and/or source files.
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'resources/submission.json'

      responses:
        '202':
          description: The submission payload has been accepted for deposit.
          headers:
            Location:
              description: Status endpoint for the new submission.
              schema:
                type: "string"

  /submission/{id}/:
    parameters:
      - in: path
        name: id
        description: |
          Unique submission ID returned upon createSubmission. This will
          likely, but not necessesarily, look like an integer.
        required: true
        schema:
          type: string

    get:
      description: |
        Get the current state of the submission, including procedural
        and descriptive metadata.
      operationId: getSubmission
      responses:
        '200':
          description: |
            Procedural and descriptive metadata about the submission resource,
            including its current state in the submission process.
          content:
            application/json:
              schema:
                $ref: 'resources/submission.json'

    post:
      operationId: updateSubmission
      description: |
        Update the submission with procedural and descriptive metadata. Include
        data only for fields which should be updated.
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'resources/submission.json'

      responses:
        '200':
          description: The submission has been updated.
          content:
            application/json:
              schema:
                $ref: 'resources/submission.json'

  /submission/{id}/source/:
    parameters:
      - in: path
        name: id
        description: |
          Unique submission ID returned upon createSubmission. This will
          likely, but not necessesarily, look like an integer.
        required: true
        schema:
          type: string

    get:
      operationId: getSourceInformation
      description: |
        Get information about the submission source package.
      responses:
        '200':
          description: Source package information.
          content:
            application/json:
              schema:
                $ref: 'resources/content.json'

    post:
      operationId: addSourcePackage
      description: |
        Add (or replace) the source package for the submission.
      responses:
        '200':
          description: |
            The submission has been updated with a reference to the source package.
          content:
            application/json:
              schema:
                $ref: 'resources/content.json'

  /submission/{id}/history/:
    parameters:
      - in: path
        name: id
        description: |
          Unique submission ID returned upon createSubmission. This will
          likely, but not necessesarily, look like an integer.
        required: true
        schema:
          type: string

    get:
      description: |
        Get the event log for a submission. This will include only events that
        the user/client is authorized to view.
      operationId: getSubmissionHistory
      responses:
        '200':
          description: |
            Event log for the submission. This will include only events that
            the user/client is authorized to view.
          content:
            application/json:
              schema:
                $ref: 'resources/log.json'

  /submission/{id}/history/{event_id}/:
    parameters:
      - name: id
        in: path
        description: |
          Unique submission ID returned upon createSubmission. This will
          likely, but not necessesarily, look like an integer.
        required: true
        schema:
          type: string
      - name: event_id
        in: path
        description: |
          Unique ID for the submission event.
        required: true
        schema:
          type: string

    get:
      description: Get data for a submission event.
      operationId: getSubmissionEvent
      responses:
        '200':
          description: |
            Event data for the submission event.
          content:
            application/json:
              schema:
                $ref: 'resources/event.json'
